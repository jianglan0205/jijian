{"mappings":"kBAAMA,EAAYC,EAAE,aAEdC,EAAUF,EAAUG,KAAK,WAEzBC,EAAIC,aAAaC,QAAQ,KAIzBC,EAHUC,KAAKC,MAAML,IAGXM,CAAAA,CACVC,KAAM,IAAKC,IAAK,yBAChBD,KAAM,IAAKC,IAAK,6BAIhBC,EAAeD,GACVA,EAAIE,QAAQ,WAAY,IAC1BA,QAAQ,UAAW,IACnBA,QAAQ,OAAQ,IAChBA,QAAQ,OAAQ,IAGnBC,EAAS,KACXf,EAAUG,KAAK,iBAAiBa,SAEhCT,EAAQU,SAAQ,CAACC,EAAMC,KAEnBC,QAAQC,IAAIF,SACNG,EAAMrB,EAAAA,iGAGoBiB,EAAKP,qDACLE,EAAYK,EAAKN,wRAQ9CW,aAAarB,GAChBoB,EAAIE,GAAG,SAAS,KACZC,OAAOC,KAAKR,EAAKN,QAGrBU,EAAIE,GAAG,QAAS,UAAWG,IACvBA,EAAEC,kBACFR,QAAQC,IAAId,GACZA,EAAQsB,OAAOV,EAAO,GAGtBJ,WAMZA,IAEAd,EAAE,cACGuB,GAAG,SAAS,SACLZ,EAAMa,OAAOK,OAAO,gBACI,IAAxBlB,EAAImB,QAAQ,UACZnB,EAAM,WAAaA,GAEvBQ,QAAQC,IAAIT,GACZL,EAAQyB,KAAAA,CAAOrB,KAAME,EAAYD,GAAK,GAAGqB,cAAerB,IAAKA,IAC7DG,OAIRU,OAAOS,eAAiB,WACdC,EAAS3B,KAAK4B,UAAU7B,GAC9BkB,OAAOpB,aAAagC,QAAQ,IAAKF,IAMrCV,OAAOS,eAAiB,WACdC,EAAS3B,KAAK4B,UAAU7B,GAC9BF,aAAagC,QAAQ,IAAKF,IAG9BlC,EAAEqC,UAAUd,GAAG,YAAaG,cAChBY,GAAQZ,UAEPa,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAC5BjC,EAAQiC,GAAG7B,KAAK+B,gBAAkBH,GAClCd,OAAOC,KAAKnB,EAAQiC,GAAG5B","sources":["./src/main.js"],"sourcesContent":["const $siteList = $(\".siteList\")\r\n//找到siteList,可以console.log($siteList)一下\r\nconst $lastLi = $siteList.find(\"li.last\")\r\n//在siteList里找li下面的.last\r\nconst x = localStorage.getItem('x')\r\nconst xObject = JSON.parse(x)\r\n\r\n//如果xObject存在就用,不存在就用我默认的下面这个\r\nconst hashMap = xObject || [\r\n    { logo: \"A\", url: \"https://www.acfun.cn\" },\r\n    { logo: \"B\", url: \"https://www.bilibili.com\" }\r\n]\r\n//搞一个哈希表放那些网站\r\n\r\nconst simplifyUrl = (url) => {\r\n    return url.replace('https://', '')\r\n        .replace('http://', '')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, '') // 删除 / 开头的内容\r\n}\r\n\r\nconst render = () => {\r\n    $siteList.find('li:not(.last)').remove()\r\n    //把siteList里面所有li都找到,但是唯独不找最后一个li\r\n    hashMap.forEach((node, index) => {\r\n        //index拿到下标方便做删除\r\n        console.log(index)\r\n        const $li = $(`\r\n            <li>\r\n                <div class=\"site\">\r\n                    <div class=\"logo\">${node.logo}</div>\r\n                    <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n                    <div class=\"close\">\r\n                        <svg class=\"icon\">\r\n                            <use xlink:href=\"#icon-close\"></use>\r\n                        </svg>\r\n                    </div>  \r\n                </div>\r\n            </li>\r\n        `).insertBefore($lastLi)\r\n        $li.on('click', () => {\r\n            window.open(node.url)\r\n        })\r\n        //用window.open来代替我们去掉的a标签跳转\r\n        $li.on('click', '.close', (e) => {\r\n            e.stopPropagation()\r\n            console.log(hashMap)\r\n            hashMap.splice(index, 1)\r\n            //数组删除,从index这里删除一个\r\n            //虽然删了,但没有重新渲染,要重新render一下\r\n            render()\r\n        })\r\n        //阻止close的冒泡,这样点击X就不会跳转页面\r\n    })\r\n};\r\n//${}插值法,JS语法\r\nrender()\r\n\r\n$(\".addButton\")\r\n    .on(\"click\", () => {\r\n        let url = window.prompt('请问你要添加的网址是啥?')\r\n        if (url.indexOf('http') !== 0) {\r\n            url = \"https://\" + url;\r\n        }\r\n        console.log(url);\r\n        hashMap.push({ logo: simplifyUrl(url)[0].toUpperCase(), url: url });\r\n        render()\r\n    });\r\n//.toUpperCase()变成大写\r\n\r\nwindow.onbeforeunload = () => {\r\n    const string = JSON.stringify(hashMap)\r\n    window.localStorage.setItem('x', string)\r\n}\r\n//localStorage全局变量,window.可省略.接受2个值,key和value\r\n//意思就是在本地的存储里设置一个X它的值就是string\r\n//f12里Application里localStorage可以看目前的值\r\n\r\nwindow.onbeforeunload = () => {\r\n    const string = JSON.stringify(hashMap)\r\n    localStorage.setItem('x', string)\r\n}\r\n\r\n$(document).on('keypress', (e) => {\r\n    const { key } = e\r\n    //const key = e.key的简写,变量名和属性名一样的话,可以简写\r\n    for (let i = 0; i < hashMap.length; i++) {\r\n        if (hashMap[i].logo.toLowerCase() === key) {\r\n            window.open(hashMap[i].url)\r\n        }\r\n    }\r\n})"],"names":["$16b5ad875ae907e2f7f79e7b8fe116cc$var$$siteList","$","$16b5ad875ae907e2f7f79e7b8fe116cc$var$$lastLi","find","$16b5ad875ae907e2f7f79e7b8fe116cc$var$x","localStorage","getItem","$16b5ad875ae907e2f7f79e7b8fe116cc$var$hashMap","JSON","parse","$16b5ad875ae907e2f7f79e7b8fe116cc$var$xObject","logo","url","$16b5ad875ae907e2f7f79e7b8fe116cc$var$simplifyUrl","replace","$16b5ad875ae907e2f7f79e7b8fe116cc$var$render","remove","forEach","node","index","console","log","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","push","toUpperCase","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"version":3,"file":"index.HASH_REF_83d4711ea689fc47f03deb70f03c99b4.js.map"}